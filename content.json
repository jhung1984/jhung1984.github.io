{"pages":[],"posts":[{"title":"firefox","text":"##当扩展插件被阻止安装。Firefox Developer Edition已阻止此网站安装未经验证的附加组件。 网上搜到的解决办法简明扼要，就这一句：about:config 中 xpinstall.signatures.required 设置为false.","link":"/2020/04/17/firefox/"},{"title":"npm 换源","text":"国内源 淘宝npm镜像 搜索地址: http://npm.taobao.org registry地址: http://registry.npm.taobao.org cnpmjs镜像 搜索地址: http://cnpmjs.org registry地址: http://r.cnpmjs.org 使用方法 临时使用 npm –registry https://registry.npm.taobao.org install express 永久使用 npm config set registry https://registry.npm.taobao.org 使用cnpm npm install -g cnpm –registry=https://registry.npm.taobao.org","link":"/2020/04/17/npm%20%E6%8D%A2%E6%BA%90/"},{"title":"Flask Web框架","text":"Flask Web框架安装pip install Flask==1.1.1 在pycharm里直接新建项目,选择flask项目创建,设置虚拟环境等. 解释器(interpreter) Flask – Flask库文件 Jinja2 –模板语言 MarkupSafe –返回安全标签(Flask依赖markupsafe返回安全标签) Werkzeug –(德语’工具’得意思)相当于uWSGI(应用存取网关接口),底层仍为WSGI 启动Flask123456789101112from flask import Flask # 导入Flask类创建Flask应用对象app = Flask(__name__) # app = application@app.route('/') # 为Flask应用对象添加路由def hello_world(): # 与路由绑定得视图函数,名称保持唯一 return 'Hello World!' # 相当于Django中得HttpResponseif __name__ == '__main__': # 当前文件处于脚本状态时运行如下代码 app.run() # 启动Flask应用 Flask中的Response HttpResponse “hello world!” render(‘html文件’) render_template(‘html文件’) redirect(‘/home’) redirect(‘/home’) #3xx开头根据指令做出相应 #4xx 错误 客户端 #5xx 错误 服务器 #302 HTTP status ResponseHeaders中加入一个Localtion:http://url send_file(‘文件路径’) 返回文件 123@app.route('/get_file')def get_file(): return send_file('1.jpg') #打开并返回文件内容.Content-Type:可以被客户端识别得文件类型. #在ResponseHeaders中加入,不能识别得类型,下载处理. jsonify(‘字符串或数据类型’) 返回JSON字符串 123456@app.route('/get_json')def get_json(): d = {d 'name':'Alexander.DSB.Li' } return jsonify(d) #Content-Type:appliaction/json 返回标准格式的JSON字符串 #直接返回dict时,本质上在执行jsonify() Flask中的request123@app.route('/login', methods=['POST','GET'])def login(): return render_template('login.html') methods=['GET','POST']在路由的装饰器中允许请求方式. request.form.to_dict()获取FormData中得数据to_dict(),ImmutableMultiDict request.methods 获取请求方式 request.args.get(‘id) 获取URL中得数据字符串.支持get(‘key’)和to_dict() request.files.get(‘my_file’) 提取文件.获取一个FileStorage Flask文件特殊对象. my_file.save(my_file.filename) 12345678&lt;form action=\"\" method=\"post\" enctype=\"multipart/form-data\"&gt; &lt;p&gt; username: &lt;input type=\"text\" name=\"'username\"&gt; &lt;/p&gt; &lt;p&gt;&lt;input type=\"file\" name=\"my_file\"&gt;&lt;/p&gt; &lt;input type=\"submit\" value=\"登录\"&gt; &lt;/form&gt;","link":"/2020/04/17/Flask%20Web%E6%A1%86%E6%9E%B6/"}],"tags":[],"categories":[]}